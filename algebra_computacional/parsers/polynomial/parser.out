Created by PLY version 3.9 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> statement
Rule 1     statement -> <empty>
Rule 2     statement -> polynomial
Rule 3     monomial -> scalar
Rule 4     monomial -> scalar VAR
Rule 5     monomial -> scalar VAR POWER number
Rule 6     monomial -> VAR
Rule 7     monomial -> VAR POWER number
Rule 8     polynomial -> monomial
Rule 9     polynomial -> polynomial PLUS polynomial
Rule 10    polynomial -> polynomial MINUS polynomial
Rule 11    polynomial -> polynomial TIMES polynomial
Rule 12    polynomial -> polynomial DIVIDE polynomial
Rule 13    polynomial -> LPAREN polynomial RPAREN monomial
Rule 14    polynomial -> LPAREN polynomial RPAREN POWER number
Rule 15    polynomial -> LPAREN polynomial RPAREN
Rule 16    polynomial -> MINUS polynomial
Rule 17    number -> NUMBER
Rule 18    scalar -> SCALAR
Rule 19    scalar -> NUMBER
Rule 20    scalar -> scalar POWER number

Terminals, with rules where they appear

DIVIDE               : 12
LPAREN               : 13 14 15
MINUS                : 10 16
NUMBER               : 17 19
PLUS                 : 9
POWER                : 5 7 14 20
RPAREN               : 13 14 15
SCALAR               : 18
TIMES                : 11
VAR                  : 4 5 6 7
error                : 

Nonterminals, with rules where they appear

monomial             : 8 13
number               : 5 7 14 20
polynomial           : 2 9 9 10 10 11 11 12 12 13 14 15 16
scalar               : 3 4 5 20
statement            : 0

Parsing method: LALR

state 0

    (0) S' -> . statement
    (1) statement -> .
    (2) statement -> . polynomial
    (8) polynomial -> . monomial
    (9) polynomial -> . polynomial PLUS polynomial
    (10) polynomial -> . polynomial MINUS polynomial
    (11) polynomial -> . polynomial TIMES polynomial
    (12) polynomial -> . polynomial DIVIDE polynomial
    (13) polynomial -> . LPAREN polynomial RPAREN monomial
    (14) polynomial -> . LPAREN polynomial RPAREN POWER number
    (15) polynomial -> . LPAREN polynomial RPAREN
    (16) polynomial -> . MINUS polynomial
    (3) monomial -> . scalar
    (4) monomial -> . scalar VAR
    (5) monomial -> . scalar VAR POWER number
    (6) monomial -> . VAR
    (7) monomial -> . VAR POWER number
    (18) scalar -> . SCALAR
    (19) scalar -> . NUMBER
    (20) scalar -> . scalar POWER number

    $end            reduce using rule 1 (statement -> .)
    LPAREN          shift and go to state 3
    MINUS           shift and go to state 8
    VAR             shift and go to state 4
    SCALAR          shift and go to state 1
    NUMBER          shift and go to state 9

    polynomial                     shift and go to state 7
    monomial                       shift and go to state 2
    scalar                         shift and go to state 5
    statement                      shift and go to state 6

state 1

    (18) scalar -> SCALAR .

    VAR             reduce using rule 18 (scalar -> SCALAR .)
    POWER           reduce using rule 18 (scalar -> SCALAR .)
    PLUS            reduce using rule 18 (scalar -> SCALAR .)
    MINUS           reduce using rule 18 (scalar -> SCALAR .)
    TIMES           reduce using rule 18 (scalar -> SCALAR .)
    DIVIDE          reduce using rule 18 (scalar -> SCALAR .)
    $end            reduce using rule 18 (scalar -> SCALAR .)
    RPAREN          reduce using rule 18 (scalar -> SCALAR .)


state 2

    (8) polynomial -> monomial .

    PLUS            reduce using rule 8 (polynomial -> monomial .)
    MINUS           reduce using rule 8 (polynomial -> monomial .)
    TIMES           reduce using rule 8 (polynomial -> monomial .)
    DIVIDE          reduce using rule 8 (polynomial -> monomial .)
    $end            reduce using rule 8 (polynomial -> monomial .)
    RPAREN          reduce using rule 8 (polynomial -> monomial .)


state 3

    (13) polynomial -> LPAREN . polynomial RPAREN monomial
    (14) polynomial -> LPAREN . polynomial RPAREN POWER number
    (15) polynomial -> LPAREN . polynomial RPAREN
    (8) polynomial -> . monomial
    (9) polynomial -> . polynomial PLUS polynomial
    (10) polynomial -> . polynomial MINUS polynomial
    (11) polynomial -> . polynomial TIMES polynomial
    (12) polynomial -> . polynomial DIVIDE polynomial
    (13) polynomial -> . LPAREN polynomial RPAREN monomial
    (14) polynomial -> . LPAREN polynomial RPAREN POWER number
    (15) polynomial -> . LPAREN polynomial RPAREN
    (16) polynomial -> . MINUS polynomial
    (3) monomial -> . scalar
    (4) monomial -> . scalar VAR
    (5) monomial -> . scalar VAR POWER number
    (6) monomial -> . VAR
    (7) monomial -> . VAR POWER number
    (18) scalar -> . SCALAR
    (19) scalar -> . NUMBER
    (20) scalar -> . scalar POWER number

    LPAREN          shift and go to state 3
    MINUS           shift and go to state 8
    VAR             shift and go to state 4
    SCALAR          shift and go to state 1
    NUMBER          shift and go to state 9

    polynomial                     shift and go to state 10
    monomial                       shift and go to state 2
    scalar                         shift and go to state 5

state 4

    (6) monomial -> VAR .
    (7) monomial -> VAR . POWER number

    PLUS            reduce using rule 6 (monomial -> VAR .)
    MINUS           reduce using rule 6 (monomial -> VAR .)
    TIMES           reduce using rule 6 (monomial -> VAR .)
    DIVIDE          reduce using rule 6 (monomial -> VAR .)
    $end            reduce using rule 6 (monomial -> VAR .)
    RPAREN          reduce using rule 6 (monomial -> VAR .)
    POWER           shift and go to state 11


state 5

    (3) monomial -> scalar .
    (4) monomial -> scalar . VAR
    (5) monomial -> scalar . VAR POWER number
    (20) scalar -> scalar . POWER number

    PLUS            reduce using rule 3 (monomial -> scalar .)
    MINUS           reduce using rule 3 (monomial -> scalar .)
    TIMES           reduce using rule 3 (monomial -> scalar .)
    DIVIDE          reduce using rule 3 (monomial -> scalar .)
    $end            reduce using rule 3 (monomial -> scalar .)
    RPAREN          reduce using rule 3 (monomial -> scalar .)
    VAR             shift and go to state 12
    POWER           shift and go to state 13


state 6

    (0) S' -> statement .



state 7

    (2) statement -> polynomial .
    (9) polynomial -> polynomial . PLUS polynomial
    (10) polynomial -> polynomial . MINUS polynomial
    (11) polynomial -> polynomial . TIMES polynomial
    (12) polynomial -> polynomial . DIVIDE polynomial

    $end            reduce using rule 2 (statement -> polynomial .)
    PLUS            shift and go to state 15
    MINUS           shift and go to state 16
    TIMES           shift and go to state 17
    DIVIDE          shift and go to state 14


state 8

    (16) polynomial -> MINUS . polynomial
    (8) polynomial -> . monomial
    (9) polynomial -> . polynomial PLUS polynomial
    (10) polynomial -> . polynomial MINUS polynomial
    (11) polynomial -> . polynomial TIMES polynomial
    (12) polynomial -> . polynomial DIVIDE polynomial
    (13) polynomial -> . LPAREN polynomial RPAREN monomial
    (14) polynomial -> . LPAREN polynomial RPAREN POWER number
    (15) polynomial -> . LPAREN polynomial RPAREN
    (16) polynomial -> . MINUS polynomial
    (3) monomial -> . scalar
    (4) monomial -> . scalar VAR
    (5) monomial -> . scalar VAR POWER number
    (6) monomial -> . VAR
    (7) monomial -> . VAR POWER number
    (18) scalar -> . SCALAR
    (19) scalar -> . NUMBER
    (20) scalar -> . scalar POWER number

    LPAREN          shift and go to state 3
    MINUS           shift and go to state 8
    VAR             shift and go to state 4
    SCALAR          shift and go to state 1
    NUMBER          shift and go to state 9

    polynomial                     shift and go to state 18
    monomial                       shift and go to state 2
    scalar                         shift and go to state 5

state 9

    (19) scalar -> NUMBER .

    VAR             reduce using rule 19 (scalar -> NUMBER .)
    POWER           reduce using rule 19 (scalar -> NUMBER .)
    PLUS            reduce using rule 19 (scalar -> NUMBER .)
    MINUS           reduce using rule 19 (scalar -> NUMBER .)
    TIMES           reduce using rule 19 (scalar -> NUMBER .)
    DIVIDE          reduce using rule 19 (scalar -> NUMBER .)
    $end            reduce using rule 19 (scalar -> NUMBER .)
    RPAREN          reduce using rule 19 (scalar -> NUMBER .)


state 10

    (13) polynomial -> LPAREN polynomial . RPAREN monomial
    (14) polynomial -> LPAREN polynomial . RPAREN POWER number
    (15) polynomial -> LPAREN polynomial . RPAREN
    (9) polynomial -> polynomial . PLUS polynomial
    (10) polynomial -> polynomial . MINUS polynomial
    (11) polynomial -> polynomial . TIMES polynomial
    (12) polynomial -> polynomial . DIVIDE polynomial

    RPAREN          shift and go to state 19
    PLUS            shift and go to state 15
    MINUS           shift and go to state 16
    TIMES           shift and go to state 17
    DIVIDE          shift and go to state 14


state 11

    (7) monomial -> VAR POWER . number
    (17) number -> . NUMBER

    NUMBER          shift and go to state 21

    number                         shift and go to state 20

state 12

    (4) monomial -> scalar VAR .
    (5) monomial -> scalar VAR . POWER number

    PLUS            reduce using rule 4 (monomial -> scalar VAR .)
    MINUS           reduce using rule 4 (monomial -> scalar VAR .)
    TIMES           reduce using rule 4 (monomial -> scalar VAR .)
    DIVIDE          reduce using rule 4 (monomial -> scalar VAR .)
    $end            reduce using rule 4 (monomial -> scalar VAR .)
    RPAREN          reduce using rule 4 (monomial -> scalar VAR .)
    POWER           shift and go to state 22


state 13

    (20) scalar -> scalar POWER . number
    (17) number -> . NUMBER

    NUMBER          shift and go to state 21

    number                         shift and go to state 23

state 14

    (12) polynomial -> polynomial DIVIDE . polynomial
    (8) polynomial -> . monomial
    (9) polynomial -> . polynomial PLUS polynomial
    (10) polynomial -> . polynomial MINUS polynomial
    (11) polynomial -> . polynomial TIMES polynomial
    (12) polynomial -> . polynomial DIVIDE polynomial
    (13) polynomial -> . LPAREN polynomial RPAREN monomial
    (14) polynomial -> . LPAREN polynomial RPAREN POWER number
    (15) polynomial -> . LPAREN polynomial RPAREN
    (16) polynomial -> . MINUS polynomial
    (3) monomial -> . scalar
    (4) monomial -> . scalar VAR
    (5) monomial -> . scalar VAR POWER number
    (6) monomial -> . VAR
    (7) monomial -> . VAR POWER number
    (18) scalar -> . SCALAR
    (19) scalar -> . NUMBER
    (20) scalar -> . scalar POWER number

    LPAREN          shift and go to state 3
    MINUS           shift and go to state 8
    VAR             shift and go to state 4
    SCALAR          shift and go to state 1
    NUMBER          shift and go to state 9

    polynomial                     shift and go to state 24
    monomial                       shift and go to state 2
    scalar                         shift and go to state 5

state 15

    (9) polynomial -> polynomial PLUS . polynomial
    (8) polynomial -> . monomial
    (9) polynomial -> . polynomial PLUS polynomial
    (10) polynomial -> . polynomial MINUS polynomial
    (11) polynomial -> . polynomial TIMES polynomial
    (12) polynomial -> . polynomial DIVIDE polynomial
    (13) polynomial -> . LPAREN polynomial RPAREN monomial
    (14) polynomial -> . LPAREN polynomial RPAREN POWER number
    (15) polynomial -> . LPAREN polynomial RPAREN
    (16) polynomial -> . MINUS polynomial
    (3) monomial -> . scalar
    (4) monomial -> . scalar VAR
    (5) monomial -> . scalar VAR POWER number
    (6) monomial -> . VAR
    (7) monomial -> . VAR POWER number
    (18) scalar -> . SCALAR
    (19) scalar -> . NUMBER
    (20) scalar -> . scalar POWER number

    LPAREN          shift and go to state 3
    MINUS           shift and go to state 8
    VAR             shift and go to state 4
    SCALAR          shift and go to state 1
    NUMBER          shift and go to state 9

    polynomial                     shift and go to state 25
    monomial                       shift and go to state 2
    scalar                         shift and go to state 5

state 16

    (10) polynomial -> polynomial MINUS . polynomial
    (8) polynomial -> . monomial
    (9) polynomial -> . polynomial PLUS polynomial
    (10) polynomial -> . polynomial MINUS polynomial
    (11) polynomial -> . polynomial TIMES polynomial
    (12) polynomial -> . polynomial DIVIDE polynomial
    (13) polynomial -> . LPAREN polynomial RPAREN monomial
    (14) polynomial -> . LPAREN polynomial RPAREN POWER number
    (15) polynomial -> . LPAREN polynomial RPAREN
    (16) polynomial -> . MINUS polynomial
    (3) monomial -> . scalar
    (4) monomial -> . scalar VAR
    (5) monomial -> . scalar VAR POWER number
    (6) monomial -> . VAR
    (7) monomial -> . VAR POWER number
    (18) scalar -> . SCALAR
    (19) scalar -> . NUMBER
    (20) scalar -> . scalar POWER number

    LPAREN          shift and go to state 3
    MINUS           shift and go to state 8
    VAR             shift and go to state 4
    SCALAR          shift and go to state 1
    NUMBER          shift and go to state 9

    polynomial                     shift and go to state 26
    monomial                       shift and go to state 2
    scalar                         shift and go to state 5

state 17

    (11) polynomial -> polynomial TIMES . polynomial
    (8) polynomial -> . monomial
    (9) polynomial -> . polynomial PLUS polynomial
    (10) polynomial -> . polynomial MINUS polynomial
    (11) polynomial -> . polynomial TIMES polynomial
    (12) polynomial -> . polynomial DIVIDE polynomial
    (13) polynomial -> . LPAREN polynomial RPAREN monomial
    (14) polynomial -> . LPAREN polynomial RPAREN POWER number
    (15) polynomial -> . LPAREN polynomial RPAREN
    (16) polynomial -> . MINUS polynomial
    (3) monomial -> . scalar
    (4) monomial -> . scalar VAR
    (5) monomial -> . scalar VAR POWER number
    (6) monomial -> . VAR
    (7) monomial -> . VAR POWER number
    (18) scalar -> . SCALAR
    (19) scalar -> . NUMBER
    (20) scalar -> . scalar POWER number

    LPAREN          shift and go to state 3
    MINUS           shift and go to state 8
    VAR             shift and go to state 4
    SCALAR          shift and go to state 1
    NUMBER          shift and go to state 9

    polynomial                     shift and go to state 27
    monomial                       shift and go to state 2
    scalar                         shift and go to state 5

state 18

    (16) polynomial -> MINUS polynomial .
    (9) polynomial -> polynomial . PLUS polynomial
    (10) polynomial -> polynomial . MINUS polynomial
    (11) polynomial -> polynomial . TIMES polynomial
    (12) polynomial -> polynomial . DIVIDE polynomial

    PLUS            reduce using rule 16 (polynomial -> MINUS polynomial .)
    MINUS           reduce using rule 16 (polynomial -> MINUS polynomial .)
    TIMES           reduce using rule 16 (polynomial -> MINUS polynomial .)
    DIVIDE          reduce using rule 16 (polynomial -> MINUS polynomial .)
    $end            reduce using rule 16 (polynomial -> MINUS polynomial .)
    RPAREN          reduce using rule 16 (polynomial -> MINUS polynomial .)

  ! PLUS            [ shift and go to state 15 ]
  ! MINUS           [ shift and go to state 16 ]
  ! TIMES           [ shift and go to state 17 ]
  ! DIVIDE          [ shift and go to state 14 ]


state 19

    (13) polynomial -> LPAREN polynomial RPAREN . monomial
    (14) polynomial -> LPAREN polynomial RPAREN . POWER number
    (15) polynomial -> LPAREN polynomial RPAREN .
    (3) monomial -> . scalar
    (4) monomial -> . scalar VAR
    (5) monomial -> . scalar VAR POWER number
    (6) monomial -> . VAR
    (7) monomial -> . VAR POWER number
    (18) scalar -> . SCALAR
    (19) scalar -> . NUMBER
    (20) scalar -> . scalar POWER number

    POWER           shift and go to state 28
    PLUS            reduce using rule 15 (polynomial -> LPAREN polynomial RPAREN .)
    MINUS           reduce using rule 15 (polynomial -> LPAREN polynomial RPAREN .)
    TIMES           reduce using rule 15 (polynomial -> LPAREN polynomial RPAREN .)
    DIVIDE          reduce using rule 15 (polynomial -> LPAREN polynomial RPAREN .)
    $end            reduce using rule 15 (polynomial -> LPAREN polynomial RPAREN .)
    RPAREN          reduce using rule 15 (polynomial -> LPAREN polynomial RPAREN .)
    VAR             shift and go to state 4
    SCALAR          shift and go to state 1
    NUMBER          shift and go to state 9

    monomial                       shift and go to state 29
    scalar                         shift and go to state 5

state 20

    (7) monomial -> VAR POWER number .

    PLUS            reduce using rule 7 (monomial -> VAR POWER number .)
    MINUS           reduce using rule 7 (monomial -> VAR POWER number .)
    TIMES           reduce using rule 7 (monomial -> VAR POWER number .)
    DIVIDE          reduce using rule 7 (monomial -> VAR POWER number .)
    $end            reduce using rule 7 (monomial -> VAR POWER number .)
    RPAREN          reduce using rule 7 (monomial -> VAR POWER number .)


state 21

    (17) number -> NUMBER .

    VAR             reduce using rule 17 (number -> NUMBER .)
    POWER           reduce using rule 17 (number -> NUMBER .)
    PLUS            reduce using rule 17 (number -> NUMBER .)
    MINUS           reduce using rule 17 (number -> NUMBER .)
    TIMES           reduce using rule 17 (number -> NUMBER .)
    DIVIDE          reduce using rule 17 (number -> NUMBER .)
    $end            reduce using rule 17 (number -> NUMBER .)
    RPAREN          reduce using rule 17 (number -> NUMBER .)


state 22

    (5) monomial -> scalar VAR POWER . number
    (17) number -> . NUMBER

    NUMBER          shift and go to state 21

    number                         shift and go to state 30

state 23

    (20) scalar -> scalar POWER number .

    VAR             reduce using rule 20 (scalar -> scalar POWER number .)
    POWER           reduce using rule 20 (scalar -> scalar POWER number .)
    PLUS            reduce using rule 20 (scalar -> scalar POWER number .)
    MINUS           reduce using rule 20 (scalar -> scalar POWER number .)
    TIMES           reduce using rule 20 (scalar -> scalar POWER number .)
    DIVIDE          reduce using rule 20 (scalar -> scalar POWER number .)
    $end            reduce using rule 20 (scalar -> scalar POWER number .)
    RPAREN          reduce using rule 20 (scalar -> scalar POWER number .)


state 24

    (12) polynomial -> polynomial DIVIDE polynomial .
    (9) polynomial -> polynomial . PLUS polynomial
    (10) polynomial -> polynomial . MINUS polynomial
    (11) polynomial -> polynomial . TIMES polynomial
    (12) polynomial -> polynomial . DIVIDE polynomial

    PLUS            reduce using rule 12 (polynomial -> polynomial DIVIDE polynomial .)
    MINUS           reduce using rule 12 (polynomial -> polynomial DIVIDE polynomial .)
    TIMES           reduce using rule 12 (polynomial -> polynomial DIVIDE polynomial .)
    DIVIDE          reduce using rule 12 (polynomial -> polynomial DIVIDE polynomial .)
    $end            reduce using rule 12 (polynomial -> polynomial DIVIDE polynomial .)
    RPAREN          reduce using rule 12 (polynomial -> polynomial DIVIDE polynomial .)

  ! PLUS            [ shift and go to state 15 ]
  ! MINUS           [ shift and go to state 16 ]
  ! TIMES           [ shift and go to state 17 ]
  ! DIVIDE          [ shift and go to state 14 ]


state 25

    (9) polynomial -> polynomial PLUS polynomial .
    (9) polynomial -> polynomial . PLUS polynomial
    (10) polynomial -> polynomial . MINUS polynomial
    (11) polynomial -> polynomial . TIMES polynomial
    (12) polynomial -> polynomial . DIVIDE polynomial

    PLUS            reduce using rule 9 (polynomial -> polynomial PLUS polynomial .)
    MINUS           reduce using rule 9 (polynomial -> polynomial PLUS polynomial .)
    $end            reduce using rule 9 (polynomial -> polynomial PLUS polynomial .)
    RPAREN          reduce using rule 9 (polynomial -> polynomial PLUS polynomial .)
    TIMES           shift and go to state 17
    DIVIDE          shift and go to state 14

  ! TIMES           [ reduce using rule 9 (polynomial -> polynomial PLUS polynomial .) ]
  ! DIVIDE          [ reduce using rule 9 (polynomial -> polynomial PLUS polynomial .) ]
  ! PLUS            [ shift and go to state 15 ]
  ! MINUS           [ shift and go to state 16 ]


state 26

    (10) polynomial -> polynomial MINUS polynomial .
    (9) polynomial -> polynomial . PLUS polynomial
    (10) polynomial -> polynomial . MINUS polynomial
    (11) polynomial -> polynomial . TIMES polynomial
    (12) polynomial -> polynomial . DIVIDE polynomial

    PLUS            reduce using rule 10 (polynomial -> polynomial MINUS polynomial .)
    MINUS           reduce using rule 10 (polynomial -> polynomial MINUS polynomial .)
    $end            reduce using rule 10 (polynomial -> polynomial MINUS polynomial .)
    RPAREN          reduce using rule 10 (polynomial -> polynomial MINUS polynomial .)
    TIMES           shift and go to state 17
    DIVIDE          shift and go to state 14

  ! TIMES           [ reduce using rule 10 (polynomial -> polynomial MINUS polynomial .) ]
  ! DIVIDE          [ reduce using rule 10 (polynomial -> polynomial MINUS polynomial .) ]
  ! PLUS            [ shift and go to state 15 ]
  ! MINUS           [ shift and go to state 16 ]


state 27

    (11) polynomial -> polynomial TIMES polynomial .
    (9) polynomial -> polynomial . PLUS polynomial
    (10) polynomial -> polynomial . MINUS polynomial
    (11) polynomial -> polynomial . TIMES polynomial
    (12) polynomial -> polynomial . DIVIDE polynomial

    PLUS            reduce using rule 11 (polynomial -> polynomial TIMES polynomial .)
    MINUS           reduce using rule 11 (polynomial -> polynomial TIMES polynomial .)
    TIMES           reduce using rule 11 (polynomial -> polynomial TIMES polynomial .)
    DIVIDE          reduce using rule 11 (polynomial -> polynomial TIMES polynomial .)
    $end            reduce using rule 11 (polynomial -> polynomial TIMES polynomial .)
    RPAREN          reduce using rule 11 (polynomial -> polynomial TIMES polynomial .)

  ! PLUS            [ shift and go to state 15 ]
  ! MINUS           [ shift and go to state 16 ]
  ! TIMES           [ shift and go to state 17 ]
  ! DIVIDE          [ shift and go to state 14 ]


state 28

    (14) polynomial -> LPAREN polynomial RPAREN POWER . number
    (17) number -> . NUMBER

    NUMBER          shift and go to state 21

    number                         shift and go to state 31

state 29

    (13) polynomial -> LPAREN polynomial RPAREN monomial .

    PLUS            reduce using rule 13 (polynomial -> LPAREN polynomial RPAREN monomial .)
    MINUS           reduce using rule 13 (polynomial -> LPAREN polynomial RPAREN monomial .)
    TIMES           reduce using rule 13 (polynomial -> LPAREN polynomial RPAREN monomial .)
    DIVIDE          reduce using rule 13 (polynomial -> LPAREN polynomial RPAREN monomial .)
    $end            reduce using rule 13 (polynomial -> LPAREN polynomial RPAREN monomial .)
    RPAREN          reduce using rule 13 (polynomial -> LPAREN polynomial RPAREN monomial .)


state 30

    (5) monomial -> scalar VAR POWER number .

    PLUS            reduce using rule 5 (monomial -> scalar VAR POWER number .)
    MINUS           reduce using rule 5 (monomial -> scalar VAR POWER number .)
    TIMES           reduce using rule 5 (monomial -> scalar VAR POWER number .)
    DIVIDE          reduce using rule 5 (monomial -> scalar VAR POWER number .)
    $end            reduce using rule 5 (monomial -> scalar VAR POWER number .)
    RPAREN          reduce using rule 5 (monomial -> scalar VAR POWER number .)


state 31

    (14) polynomial -> LPAREN polynomial RPAREN POWER number .

    PLUS            reduce using rule 14 (polynomial -> LPAREN polynomial RPAREN POWER number .)
    MINUS           reduce using rule 14 (polynomial -> LPAREN polynomial RPAREN POWER number .)
    TIMES           reduce using rule 14 (polynomial -> LPAREN polynomial RPAREN POWER number .)
    DIVIDE          reduce using rule 14 (polynomial -> LPAREN polynomial RPAREN POWER number .)
    $end            reduce using rule 14 (polynomial -> LPAREN polynomial RPAREN POWER number .)
    RPAREN          reduce using rule 14 (polynomial -> LPAREN polynomial RPAREN POWER number .)

